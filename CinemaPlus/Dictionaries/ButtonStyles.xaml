<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:vsm="http://schemas.microsoft.com/winfx/2006/xaml/presentation">

    <Style x:Key="ButtonBaseStyle" TargetType="Button">
        <Setter Property="Height" Value="70"></Setter>
        <Setter Property="Width" Value="140"></Setter>
        <Setter Property="FontWeight" Value="ExtraBlack"></Setter>
        <Setter Property="FontFamily" Value="\Fonts\#Roboto Medium"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>

    <Style x:Key="MyButtonStyle1" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource fourthColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="6,6,0,0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource fourthColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle2" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource thirdColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle3" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource secondColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Height" Value="84"></Setter>
        <Setter Property="FontFamily" Value="\Fonts\#Ponder-Black"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="Margin" Value="0,60,0,0"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource backUpColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MyButtonStyle4" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{DynamicResource thirdColor}" BorderThickness="1,3,3,3" Background="{DynamicResource firstColor}" SnapsToDevicePixels="True" CornerRadius="0,14,14,0">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle5" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{StaticResource ninthColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource fourthColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{StaticResource ninthColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle6" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="#E3242B"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#B90E0A" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="#E3242B" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle7" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource thirdColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0,0,4,0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MyButtonStyle8" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource thirdColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0,4,0,0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle9" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource ninthColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource fifthColor}"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource tenthColor}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource firstColor }"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{StaticResource ninthColor}"></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle10" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="#E3242B"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="10"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#B90E0A" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="#E3242B" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle11" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource ninthColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource firstColor}"></Setter>
        <Setter Property="FontSize" Value="10"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource tenthColor}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{StaticResource ninthColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle12" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource backUpColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1D429A" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource backUpColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle13" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource SuccessColorBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Height" Value="84"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Green" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource SuccessColorBrush}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyButtonStyle14" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource secondColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Height" Value="84"></Setter>
        <Setter Property="FontFamily" Value="\Fonts\#Ponder-Black"></Setter>
        <Setter Property="FontWeight" Value="Medium"></Setter>
        <Setter Property="Margin" Value="0,60,0,0"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource backUpColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource secondColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadioButtonBaseStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource fifthColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="Width" Value="140"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="\Fonts\#Rubik Medium"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
    </Style>

    <Style x:Key="MyRadioButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="6,6,0,0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource fifthColor}" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource firstColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyRadioButtonStyle2" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="20,0,0,20" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource firstColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyRadioButtonStyle3" TargetType="RadioButton" BasedOn="{StaticResource RadioButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="0,0,0,0" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource firstColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyRadioButtonStyle4" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource fifthColor}"></Setter>
        <Setter Property="FontSize" Value="22"></Setter>
        <Setter Property="BorderThickness" Value="22"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="Width" Value="160"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Margin" Value="3,0"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border CornerRadius="6" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource tenthColor}" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{StaticResource ninthColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor }" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SquareRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Margin" Value="6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="20" Height="20">
                                <Rectangle
                                x:Name="Border"
                                StrokeThickness="1"
                                Stroke="Black"
                                Fill="White"
                                />
                                <Rectangle
                                x:Name="CheckMark"
                                Fill="{StaticResource tenthColor}"
                                Visibility="Collapsed"
                                Margin="2"
                                />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="Stroke.Color"
                                        >
                                            <DiscreteColorKeyFrame KeyTime="0" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                        Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="Fill.Color"
                                        >
                                            <DiscreteColorKeyFrame KeyTime="0" Value="Black" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="CheckMark"
                                        Storyboard.TargetProperty="(UIElement.Visibility)"
                                        >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True"
                        />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonBaseStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource secondColor}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="Height" Value="60"></Setter>
        <Setter Property="Width" Value="120"></Setter>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontFamily" Value="\Fonts\#Ponder-Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="30,0,0,0"></Setter>
    </Style>

    <Style x:Key="MyToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource firstColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource thirdColor}" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyToggleButtonStyle2" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonBaseStyle}">
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="30"></Setter>
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="20" BorderThickness="2" BorderBrush="{StaticResource fourthColor}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource firstColor}" ></Setter>
                            <Setter Property="Foreground" Value="{StaticResource fifthColor}" ></Setter>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="red" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource firstColor}" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LanguageButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource firstColor}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource fifthColor}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>